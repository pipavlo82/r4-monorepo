name: sanity

on:
  push:
    branches: ["main", "fix/**", "feature/**", "ci/**"]
  pull_request:
    branches: ["main"]

jobs:
  sanity-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python deps
        run: |
          pip install --no-cache-dir -r api/requirements.txt

      - name: Import smoke test (modules must load)
        run: |
          python -c "import fastapi"
          python -c 'from api import app as _app_check'
          python -c 'from api.sign_ecdsa import ecdsa_sign'
          python -c 'from api.sign_dilithium import PQ_AVAILABLE; print("PQ_AVAILABLE=", PQ_AVAILABLE)'

      - name: Build Docker image (community)
        run: |
          docker build --target community -t r4pq-ci-test .

      - name: Run container
        run: |
          docker run -d \
            --name r4pq-ci-test \
            -p 8081:8081 \
            -e API_KEY="ci-demo" \
            -e RATE_LIMIT="800/second" \
            r4pq-ci-test
          echo "⏳ Waiting for API to start..."
          for i in $(seq 1 60); do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8081/version || true)
            if [ "$code" = "200" ]; then
              echo "✅ API ready after ${i}s"
              exit 0
            fi
            sleep 1
          done
          echo "❌ API did not become ready" >&2
          docker logs r4pq-ci-test || true
          exit 1

      - name: Hit /version
        run: |
          curl -s http://127.0.0.1:8081/version | tee /tmp/version.json
          test -s /tmp/version.json

      - name: Hit /random (with API key)
        run: |
          curl -s -H "X-API-Key: ci-demo" "http://127.0.0.1:8081/random?n=16&fmt=hex" | tee /tmp/rand.txt
          test -s /tmp/rand.txt

      - name: Show outputs
        run: |
          echo "----- /version -----"
          cat /tmp/version.json || true
          echo
          echo "----- /random -----"
          cat /tmp/rand.txt || true
          echo

      - name: Cleanup container
        if: always()
        run: |
          docker logs r4pq-ci-test || true
          docker stop r4pq-ci-test || true
          docker rm r4pq-ci-test || true
