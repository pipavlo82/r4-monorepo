name: sanity

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  sanity-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python deps
        run: |
          pip install --no-cache-dir -r api/requirements.txt

      - name: Import smoke test (modules must load)
        run: |
          python - <<'PY'
          import fastapi
          from api import app as _app_check
          from api.sign_ecdsa import ecdsa_sign
          from api.sign_dilithium import PQ_AVAILABLE
          print("PQ_AVAILABLE=", PQ_AVAILABLE)
          PY

      # Будуємо community-стадію (вона є завжди)
      - name: Build Docker image (community)
        run: |
          docker build --target community -t r4pq-ci-test .

      - name: Run container
        run: |
          docker run -d \
            --name r4pq-ci-test \
            -p 8081:8081 \
            -e API_KEY='ci-demo' \
            -e RATE_LIMIT='800/second' \
            r4pq-ci-test

      - name: Wait for /version (HTTP 200)
        shell: bash
        run: |
          set -euo pipefail
          for i in {1..40}; do
            if curl -fsS "http://127.0.0.1:8081/version" -o /tmp/version.json; then
              jq -r . /tmp/version.json || true
              exit 0
            fi
            sleep 0.5
          done
          echo "API did not become ready" >&2
          exit 1

      - name: Hit /version
        run: |
          curl -fsS "http://127.0.0.1:8081/version" | tee /tmp/version.json >/dev/null

      # Деякі окруження інколи чутливі до формату ключа.
      # Дамо і заголовок, і query-параметр одночасно.
      - name: Hit /random (with API key)
        shell: bash
        run: |
          set -euo pipefail
          curl --fail-with-body -sS \
               -H "X-API-Key: ci-demo" \
               "http://127.0.0.1:8081/random?n=16&fmt=hex&key=ci-demo" \
            | tee /tmp/rand.txt >/dev/null

      - name: Show outputs
        run: |
          echo "----- /version -----"
          cat /tmp/version.json || true
          echo
          echo "----- /random -----"
          cat /tmp/rand.txt || true
          echo

      - name: Cleanup container
        if: always()
        run: |
          docker logs r4pq-ci-test || true
          docker rm -f r4pq-ci-test || true
